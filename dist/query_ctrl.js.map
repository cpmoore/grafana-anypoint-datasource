{"version":3,"sources":["../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","organizations","target","type","organization","environment","resource","targetTypes","resourceTypes","getEnvironments","setOrganization","value","refresh","datasource","length","setTimeout","environmentName","environmentNames","then","response","newEnv","i","env","text","panelCtrl","QueryCtrl","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.organizations = [];\n    this.target.type = this.target.type || 'resources';\n    this.target.organization = this.target.organization || ''\n    this.target.environment = this.target.environment || ''\n    this.target.resource = this.target.resource || 'ALL';\n    this.targetTypes = [\n      { 'value': 'ACCOUNT_RESOURCES', 'text': \"Account Resources\" },\n      { 'value': 'RUNTIME_MANAGER_RESOURCES', 'text': \"Runtime Manager Resources\" }\n    ]\n    this.resourceTypes = {\n      'ACCOUNT_RESOURCES':[\n        { 'value': 'ORGANIZATION', 'text': 'Organizations' },\n        { 'value': 'ENVIRONMENT', 'text': 'Environments' }\n      ],\n      'RUNTIME_MANAGER_RESOURCES': [\n        { 'value': 'ALL', 'text': 'All Runtime Manager Resources' },\n        { 'value': 'APPLICATION', 'text': 'Applications' },\n        { 'value': 'SERVER', 'text': 'Servers' },\n        { 'value': 'SERVER_GROUP', 'text': 'Server Groups' },\n        { 'value': 'CLUSER', 'text': 'Clusters' }\n      ]\n    }\n    if (this.target.organization) {\n      this.getEnvironments()\n    } else {\n      this.setOrganization();\n    }\n  }\n  setTargetType(){\n    this.target.resource=this.resourceTypes[this.target.type][0].value\n    this.refresh()\n  }\n  setOrganization() {\n    if (this.datasource.organizations.length) {\n      return setTimeout(this.setOrganization, 1000)\n    }\n    this.target.organization = this.datasource.organizations[0].value;\n    this.getEnvironments()\n  }\n  getEnvironments() {\n    let organization = this.target.organization\n    let environmentName = this.datasource.environmentNames[this.target.environment]\n\n    return this.datasource.getEnvironments(organization).then((response) => {\n      let newEnv;\n      for (let i = 0; i < response.length; i++) {\n        let env = response[i];\n        if (env.value === this.target.environment) {\n          return response;\n        }\n        if (env.text === environmentName) {\n          newEnv = env.value;\n        }\n      }\n      if (!newEnv && response.length) {\n        newEnv = response[0].value;\n      }\n      this.target.environment = newEnv\n      this.refresh()\n      return response\n    });\n  }\n  refresh() {\n    this.panelCtrl.refresh()\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}