{"version":3,"sources":["../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","target","type","organization","environment","resource","targetTypes","resourceTypes","previousOrganization","Promise","resolve","datasource","organizationCache","list","length","setTimeout","getOrganizations","then","promiseMultipleEnvironments","org","env","orgName","envName","d","all","found","Set","i","has","add","push","value","text","refresh","panelCtrl","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AACX,sCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,wJACvBD,MADuB,EACfC,SADe;;AAG7B,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,WAAvC;AACA,UAAKD,MAAL,CAAYE,YAAZ,GAA2B,MAAKF,MAAL,CAAYE,YAAZ,IAA4B,EAAvD;AACA,UAAKF,MAAL,CAAYG,WAAZ,GAA0B,MAAKH,MAAL,CAAYG,WAAZ,IAA2B,EAArD;AACA,UAAKH,MAAL,CAAYI,QAAZ,GAAuB,MAAKJ,MAAL,CAAYI,QAAZ,IAAwB,KAA/C;AACA,UAAKC,WAAL,GAAmB,CACjB,EAAE,SAAS,mBAAX,EAAgC,QAAQ,mBAAxC,EADiB,EAEjB,EAAE,SAAS,2BAAX,EAAwC,QAAQ,2BAAhD,EAFiB,CAAnB;AAIA,UAAKC,aAAL,GAAqB;AACnB,2BAAqB,CACnB,EAAE,SAAS,KAAX,EAAkB,QAAQ,KAA1B,EADmB,EAEnB,EAAE,SAAS,cAAX,EAA2B,QAAQ,eAAnC,EAFmB,EAGnB,EAAE,SAAS,aAAX,EAA0B,QAAQ,cAAlC,EAHmB,CADF;AAMnB,mCAA6B,CAC3B,EAAE,SAAS,KAAX,EAAkB,QAAQ,KAA1B,EAD2B,EAE3B,EAAE,SAAS,aAAX,EAA0B,QAAQ,cAAlC,EAF2B,EAG3B,EAAE,SAAS,QAAX,EAAqB,QAAQ,SAA7B,EAH2B,EAI3B,EAAE,SAAS,cAAX,EAA2B,QAAQ,eAAnC,EAJ2B,EAK3B,EAAE,SAAS,QAAX,EAAqB,QAAQ,UAA7B,EAL2B;AANV,KAArB;AAcA,UAAKC,oBAAL,GAA4B,MAAKP,MAAL,CAAYE,YAAxC;;AA1B6B;AA4B9B;;;;uCACkB;AAAA;;AACjB,aAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BA,gBAAQ,OAAKH,aAAL,CAAmB,OAAKN,MAAL,CAAYC,IAA/B,CAAR;AACD,OAFM,CAAP;AAGD;;;uCACkB;AAAA;;AACjB,aAAO,IAAIO,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,YAAI,OAAKC,UAAL,CAAgBC,iBAAhB,CAAkCC,IAAlC,CAAuCC,MAA3C,EAAmD;AACjD,iBAAOJ,QAAQ,OAAKC,UAAL,CAAgBC,iBAAhB,CAAkCC,IAA1C,CAAP;AACD;AACDE,mBAAW,YAAM;AACf,iBAAKC,gBAAL,GAAwBC,IAAxB,CAA6BP,OAA7B;AACD,SAFD,EAEG,IAFH;AAGD,OAPM,CAAP;AAQD;;;sCACiB;AAChB,aAAO,KAAKC,UAAL,CAAgBO,2BAAhB,CAA4C;AACjDf,sBAAc,KAAKF,MAAL,CAAYE,YADuB;AAEjDC,qBAAa;AAFoC,OAA5C,EAGJ,EAHI,EAGD,UAACe,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,OAApB;AAAA,eAAgCA,OAAhC;AAAA,OAHC,EAGwCL,IAHxC,CAG6C,UAACM,CAAD,EAAO;AACzD,YAAIC,MAAM,CACR,EAAC,SAAQ,GAAT,EAAa,QAAO,KAApB,EADQ,CAAV;AAGA,YAAIC,QAAQ,IAAIC,GAAJ,CAAQ,CAAC,GAAD,CAAR,CAAZ;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,EAAET,MAAtB,EAA8Ba,GAA9B,EAAmC;AACjC,cAAI,CAACF,MAAMG,GAAN,CAAUL,EAAEI,CAAF,CAAV,CAAL,EAAsB;AACpBF,kBAAMI,GAAN,CAAUN,EAAEI,CAAF,CAAV;AACAH,gBAAIM,IAAJ,CAAS,EAAEC,OAAOR,EAAEI,CAAF,CAAT,EAAeK,MAAMT,EAAEI,CAAF,CAArB,EAAT;AACD;AACF;AACD,eAAOH,GAAP;AACD,OAfM,CAAP;AAgBD;;;yCACoB;AACnB,WAAKvB,MAAL,CAAYI,QAAZ,GAAuB,KAAKE,aAAL,CAAmB,KAAKN,MAAL,CAAYC,IAA/B,EAAqC,CAArC,EAAwC6B,KAA/D;AACA,WAAKE,OAAL;AACD;;;8BACS;AACR,WAAKC,SAAL,CAAeD,OAAf;AACD;;;;EArE6CE,c;;AAwEhDtC,2BAA2BuC,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.type = this.target.type || 'resources';\n    this.target.organization = this.target.organization || ''\n    this.target.environment = this.target.environment || ''\n    this.target.resource = this.target.resource || 'ALL';\n    this.targetTypes = [\n      { 'value': 'ACCOUNT_RESOURCES', 'text': \"Account Resources\" },\n      { 'value': 'RUNTIME_MANAGER_RESOURCES', 'text': \"Runtime Manager Resources\" }\n    ]\n    this.resourceTypes = {\n      'ACCOUNT_RESOURCES': [\n        { 'value': 'ALL', 'text': 'All' },\n        { 'value': 'ORGANIZATION', 'text': 'Organizations' },\n        { 'value': 'ENVIRONMENT', 'text': 'Environments' }\n      ],\n      'RUNTIME_MANAGER_RESOURCES': [\n        { 'value': 'ALL', 'text': 'All' },\n        { 'value': 'APPLICATION', 'text': 'Applications' },\n        { 'value': 'SERVER', 'text': 'Servers' },\n        { 'value': 'SERVER_GROUP', 'text': 'Server Groups' },\n        { 'value': 'CLUSER', 'text': 'Clusters' }\n      ]\n    }\n    this.previousOrganization = this.target.organization\n\n  }\n  getResourceTypes() {\n    return new Promise((resolve) => {\n      resolve(this.resourceTypes[this.target.type])\n    })\n  }\n  getOrganizations() {\n    return new Promise((resolve) => {\n      if (this.datasource.organizationCache.list.length) {\n        return resolve(this.datasource.organizationCache.list)\n      }\n      setTimeout(() => {\n        this.getOrganizations().then(resolve)\n      }, 1000)\n    })\n  }\n  getEnvironments() {\n    return this.datasource.promiseMultipleEnvironments({\n      organization: this.target.organization,\n      environment: '*'\n    }, {},(org, env, orgName, envName) => envName).then((d) => {\n      let all = [\n        {'value':'*','text':\"All\"}\n      ]\n      let found = new Set(['*']);\n      for (let i = 0; i < d.length; i++) {\n        if (!found.has(d[i])) {\n          found.add(d[i])\n          all.push({ value: d[i], text: d[i] })\n        }\n      }\n      return all\n    })\n  }\n  onTargetTypeChange() {\n    this.target.resource = this.resourceTypes[this.target.type][0].value\n    this.refresh()\n  }\n  refresh() {\n    this.panelCtrl.refresh()\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}